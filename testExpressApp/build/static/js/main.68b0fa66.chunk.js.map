{"version":3,"sources":["AppConstants.js","components/header/index.js","components/search/index.js","components/card/index.js","components/cards/index.js","containers/AppContent.js","App.js","index.js"],"names":["LIGHT","DARK","AppHeader","state","theme","toggleAppTheme","setState","updateDataTheme","document","getElementsByTagName","setAttribute","toggleBtn_class","this","className","data-test","onClick","Component","Search","props","handleChange","e","value","target","updateSearchText","nameInput","React","createRef","current","focus","type","placeholder","ref","onChange","Card","togglePlayPause","play","images","data","playPause","alt","title","loading","src","downsized","url","Cards","cardsComp","gifs","map","gif","key","id","AppContent","fetchGIF","searchText","fetch","process","limit","then","response","console","log","json","searchedResponse","catch","err","debounceFetchGIF","fn","timer","clearTimeout","setTimeout","handleDebouncedSearchEvent","length","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.68b0fa66.chunk.js","sourcesContent":["export const LIGHT = \"light\";\nexport const DARK = \"dark\";","import React, {Component} from \"react\";\nimport \"./style.css\"\nimport {LIGHT, DARK} from \"../../AppConstants\";\n\nexport default class AppHeader extends Component {\n    state = {\n        theme: LIGHT\n    }\n\n    toggleAppTheme = () => {\n        const theme = this.state.theme ;\n        if(theme === LIGHT) {\n            this.setState({theme: DARK}, () => this.updateDataTheme(DARK));\n        } else {\n            this.setState({theme: LIGHT}, () =>this.updateDataTheme(LIGHT));\n        }\n    }\n\n    updateDataTheme = (theme) => {\n        document.getElementsByTagName(\"HTML\")[0]\n            .setAttribute(\"data-theme\", theme)\n    }\n\n    render() {\n        const theme = this.state.theme || LIGHT;\n        const toggleBtn_class = theme === LIGHT ? \"toggle-btn active\" : \"toggle-btn\"\n        return (\n            <header className=\"app_header\" data-test=\"appHeader\">\n                <span className=\"header_text\" data-test=\"headerText\" >GIFtâ€™ed</span>\n                <div data-test=\"themeSwitch\" className=\"switch\" onClick={this.toggleAppTheme}>\n                    <div data-test=\"toggleBtn\" className={toggleBtn_class}>\n                        <div className=\"inner-circle\"/>\n                    </div>\n                </div>\n            </header>\n        )\n    }\n\n}\n\n","import React, { Component } from \"react\";\nimport \"./style.css\"\nexport default class Search extends Component {\n\n    constructor(props) {\n        super(props);\n        this.nameInput = React.createRef();\n        this.state = {\n            value: \"\"\n        }\n    }\n    componentDidMount() {\n        this.nameInput.current.focus();\n    }\n\n    handleChange = (e) => {\n        this.setState({value: e.target.value}, () => this.props.updateSearchText(this.state.value))\n    }\n\n    render() {\n        return (\n            <div data-test=\"gifSearch\" className=\"gif_search\">\n                <input\n                    data-test=\"searchtext\"\n                    className=\"search_box search_text\"\n                    type=\"text\"\n                    placeholder=\"Search Gif...\"\n                    ref={this.nameInput}\n                    value={this.state.value}\n                    onChange={this.handleChange}/>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport \"../cards/style.css\"\nexport default class Card extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            play: false\n        }\n    }\n    togglePlayPause = () => {\n        this.setState({play: !this.state.play})\n    }\n    render() {\n        const images = this.props.data.images\n        const playPause = this.state.play ? \"centered play\" : \"centered pause\";\n        return (\n            <div className=\"card\" data-test=\"cardComponent\" onClick={this.togglePlayPause}>\n                <img data-test=\"gifImage\" alt={this.props.data.title} loading=\"lazy\" src={this.state.play ? images.downsized.url : images[\"480w_still\"].url} />\n                <div data-test=\"playBtn\" className={playPause}>\n                    <div className=\"triangle\"></div>\n                </div>\n            </div>\n        )\n    }\n\n}","import React, { Component } from \"react\";\nimport Card from \"../card\";\nimport \"./style.css\";\nexport default class Cards extends Component {\n\n    render(props) {\n        const {gifs} = this.props;\n        const cardsComp = gifs.map(gif => {\n            return <Card key={gif.id} data={gif} data-test=\"gifCard\"/>\n        }) || null\n        // console.log(\"cardsComp :: \", cardsComp)\n        return (\n            <div className=\"cards\" data-test=\"cardsComponent\">\n                {cardsComp}\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\"\nimport Search from \"../components/search\";\nimport Cards from \"../components/cards\";\nimport \"./style.css\";\nexport default class AppContent extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            gifs: [],\n            limit: 25\n        }\n        this.searchText = \"happy\"\n    }\n    componentDidMount() {\n        console.log(\"called\")\n        this.fetchGIF();\n    }\n\n    fetchGIF = () => {\n        if(this.searchText){\n\n\n        fetch(`https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_GIPHY_API_KEY}&q=${this.searchText}&limit=${this.state.limit}`)\n                .then(response => {\n                    console.log(\"fetchGIF\", response)\n                    return response.json()\n                })\n                .then(searchedResponse => {\n                    console.log(\"searchedResponse :: \", searchedResponse)\n                    return this.setState({gifs: searchedResponse.data})\n                })\n                .catch(err => console.log(\"Error :: \", err))\n        }\n    }\n\n    debounceFetchGIF = (fn, limit) => {\n        let timer;\n        return () => {\n            timer && clearTimeout(timer);\n            timer = setTimeout(fn, limit);\n        }\n    };\n\n    handleDebouncedSearchEvent = this.debounceFetchGIF(this.fetchGIF, 300);\n\n    updateSearchText = (searchText) => {\n        this.searchText = searchText && searchText.length > 0 ? searchText : \"happy\";\n        this.handleDebouncedSearchEvent();\n    }\n\n    render() {\n        const { gifs } = this.state;\n        return (\n            <div className=\"app_content\" data-test=\"appContent\">\n                <Search updateSearchText={this.updateSearchText}/>\n                <Cards data-test=\"cardInAppContent\" gifs={gifs}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport AppHeader from \"./components/header\";\nimport AppContent from \"./containers/AppContent\";\n\nfunction App() {\n  return (\n    <div className=\"App\" data-test=\"appComponent\">\n      <AppHeader/>\n      <AppContent/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}