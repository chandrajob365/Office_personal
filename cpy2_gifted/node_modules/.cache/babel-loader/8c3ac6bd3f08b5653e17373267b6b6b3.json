{"ast":null,"code":"var _jsxFileName = \"/Users/manishchandra/Documents/personal_workspace/gifted/src/containers/AppContent.js\";\nimport React, { Component } from \"react\";\nimport Search from \"../components/search\";\nimport Cards from \"../components/cards\";\nimport \"./style.css\";\nexport default class AppContent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchGIF = () => {\n      if (this.searchText) {\n        fetch(`https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_GIPHY_API_KEY}&q=${this.searchText}&limit=${this.state.limit}`).then(response => {\n          console.log(\"fetchGIF\", response);\n          return response.json();\n        }).then(searchedResponse => {\n          console.log(\"searchedResponse :: \", searchedResponse);\n          return this.setState({\n            gifs: searchedResponse.data\n          });\n        }).catch(err => console.log(\"Error :: \", err));\n      }\n    };\n\n    this.debounceFetchGIF = (fn, limit) => {\n      let timer;\n      return () => {\n        timer && clearTimeout(timer);\n        timer = setTimeout(fn, limit);\n      };\n    };\n\n    this.handleDebouncedSearchEvent = this.debounceFetchGIF(this.fetchGIF, 300);\n\n    this.updateSearchText = searchText => {\n      this.searchText = searchText && searchText.length > 0 ? searchText : \"happy\";\n      this.handleDebouncedSearchEvent();\n    };\n\n    this.state = {\n      gifs: [],\n      limit: 25\n    };\n    this.searchText = \"happy\";\n  }\n\n  componentDidMount() {\n    console.log(\"called\");\n    this.fetchGIF();\n  }\n\n  render() {\n    const gifs = this.state.gifs;\n    return React.createElement(\"div\", {\n      className: \"app_content\",\n      \"data-test\": \"appContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Search, {\n      updateSearchText: this.updateSearchText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Cards, {\n      \"data-test\": \"cardInAppContent\",\n      gifs: gifs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/manishchandra/Documents/personal_workspace/gifted/src/containers/AppContent.js"],"names":["React","Component","Search","Cards","AppContent","constructor","props","fetchGIF","searchText","fetch","process","env","REACT_APP_GIPHY_API_KEY","state","limit","then","response","console","log","json","searchedResponse","setState","gifs","data","catch","err","debounceFetchGIF","fn","timer","clearTimeout","setTimeout","handleDebouncedSearchEvent","updateSearchText","length","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,aAAP;AACA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAE9CI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,QAbkB,GAaP,MAAM;AACb,UAAG,KAAKC,UAAR,EAAmB;AAGnBC,QAAAA,KAAK,CAAE,gDAA+CC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,MAAK,KAAKJ,UAAW,UAAS,KAAKK,KAAL,CAAWC,KAAM,EAApI,CAAL,CACSC,IADT,CACcC,QAAQ,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,iBAAOA,QAAQ,CAACG,IAAT,EAAP;AACH,SAJT,EAKSJ,IALT,CAKcK,gBAAgB,IAAI;AACtBH,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCE,gBAApC;AACA,iBAAO,KAAKC,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAEF,gBAAgB,CAACG;AAAxB,WAAd,CAAP;AACH,SART,EASSC,KATT,CASeC,GAAG,IAAIR,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBO,GAAzB,CATtB;AAUC;AACJ,KA5BiB;;AAAA,SA8BlBC,gBA9BkB,GA8BC,CAACC,EAAD,EAAKb,KAAL,KAAe;AAC9B,UAAIc,KAAJ;AACA,aAAO,MAAM;AACTA,QAAAA,KAAK,IAAIC,YAAY,CAACD,KAAD,CAArB;AACAA,QAAAA,KAAK,GAAGE,UAAU,CAACH,EAAD,EAAKb,KAAL,CAAlB;AACH,OAHD;AAIH,KApCiB;;AAAA,SAsClBiB,0BAtCkB,GAsCW,KAAKL,gBAAL,CAAsB,KAAKnB,QAA3B,EAAqC,GAArC,CAtCX;;AAAA,SAwClByB,gBAxCkB,GAwCExB,UAAD,IAAgB;AAC/B,WAAKA,UAAL,GAAkBA,UAAU,IAAIA,UAAU,CAACyB,MAAX,GAAoB,CAAlC,GAAsCzB,UAAtC,GAAmD,OAArE;AACA,WAAKuB,0BAAL;AACH,KA3CiB;;AAEd,SAAKlB,KAAL,GAAa;AACTS,MAAAA,IAAI,EAAE,EADG;AAETR,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKN,UAAL,GAAkB,OAAlB;AACH;;AACD0B,EAAAA,iBAAiB,GAAG;AAChBjB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,SAAKX,QAAL;AACH;;AAkCD4B,EAAAA,MAAM,GAAG;AAAA,UACGb,IADH,GACY,KAAKT,KADjB,CACGS,IADH;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,mBAAU,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,gBAAgB,EAAE,KAAKU,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,mBAAU,kBAAjB;AAAoC,MAAA,IAAI,EAAEV,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAvD6C","sourcesContent":["import React, { Component } from \"react\"\nimport Search from \"../components/search\";\nimport Cards from \"../components/cards\";\nimport \"./style.css\";\nexport default class AppContent extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            gifs: [],\n            limit: 25\n        }\n        this.searchText = \"happy\"\n    }\n    componentDidMount() {\n        console.log(\"called\")\n        this.fetchGIF();\n    }\n\n    fetchGIF = () => {\n        if(this.searchText){\n\n\n        fetch(`https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_GIPHY_API_KEY}&q=${this.searchText}&limit=${this.state.limit}`)\n                .then(response => {\n                    console.log(\"fetchGIF\", response)\n                    return response.json()\n                })\n                .then(searchedResponse => {\n                    console.log(\"searchedResponse :: \", searchedResponse)\n                    return this.setState({gifs: searchedResponse.data})\n                })\n                .catch(err => console.log(\"Error :: \", err))\n        }\n    }\n\n    debounceFetchGIF = (fn, limit) => {\n        let timer;\n        return () => {\n            timer && clearTimeout(timer);\n            timer = setTimeout(fn, limit);\n        }\n    };\n\n    handleDebouncedSearchEvent = this.debounceFetchGIF(this.fetchGIF, 300);\n\n    updateSearchText = (searchText) => {\n        this.searchText = searchText && searchText.length > 0 ? searchText : \"happy\";\n        this.handleDebouncedSearchEvent();\n    }\n\n    render() {\n        const { gifs } = this.state;\n        return (\n            <div className=\"app_content\" data-test=\"appContent\">\n                <Search updateSearchText={this.updateSearchText}/>\n                <Cards data-test=\"cardInAppContent\" gifs={gifs}/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}