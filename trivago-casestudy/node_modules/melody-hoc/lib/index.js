'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _flowRight = _interopDefault(require('lodash/flowRight'));
var _defaults = _interopDefault(require('lodash/defaults'));
var melodyComponent = require('melody-component');

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var createScope = function createScope(component) {
    return {
        get el() {
            return component.el;
        },
        get refs() {
            return component.refs;
        },
        get props() {
            return component.props;
        },
        get state() {
            return component.state;
        },
        dispatch: function dispatch(action) {
            return component.dispatch(action);
        },
        getState: function getState() {
            return component.getState();
        }
    };
};

function lifecycle$1() {
    var def = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return function (component) {
        return component(function (proto) {
            var scope = Symbol();
            var _componentDidInitialize = proto.componentDidInitialize,
                _componentWillMount = proto.componentWillMount,
                _componentDidMount = proto.componentDidMount,
                _componentWillUpdate = proto.componentWillUpdate,
                _componentDidUpdate = proto.componentDidUpdate,
                _componentWillUnmount = proto.componentWillUnmount;


            return {
                componentDidInitialize: function componentDidInitialize() {
                    _componentDidInitialize.call(this);
                    this[scope] = createScope(this);
                    if (def.componentDidInitialize) {
                        def.componentDidInitialize.call(this[scope]);
                    }
                },
                componentWillMount: function componentWillMount() {
                    _componentWillMount.call(this);
                    if (def.componentWillMount) {
                        def.componentWillMount.call(this[scope]);
                    }
                },
                componentDidMount: function componentDidMount() {
                    _componentDidMount.call(this);
                    if (def.componentDidMount) {
                        def.componentDidMount.call(this[scope]);
                    }
                },
                componentWillUpdate: function componentWillUpdate(newProps, newState) {
                    _componentWillUpdate.call(this, newProps, newState);
                    if (def.componentWillUpdate) {
                        def.componentWillUpdate.call(this[scope], newProps, newState);
                    }
                },
                componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
                    _componentDidUpdate.call(this, prevProps, prevState);
                    if (def.componentDidUpdate) {
                        def.componentDidUpdate.call(this[scope], prevProps, prevState);
                    }
                },
                componentWillUnmount: function componentWillUnmount() {
                    _componentWillUnmount.call(this);
                    if (def.componentWillUnmount) {
                        def.componentWillUnmount.call(this[scope]);
                    }
                    this[scope] = undefined;
                }
            };
        });
    };
}

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var withRefs$1 = function withRefs(mapper) {
    return function (Component) {
        return Component(function (_ref) {
            var _componentDidInitialize = _ref.componentDidInitialize,
                _apply = _ref.apply;

            var refField = Symbol();
            return {
                componentDidInitialize: function componentDidInitialize() {
                    this[refField] = mapper(this);
                    _componentDidInitialize.call(this);
                },
                apply: function apply(props) {
                    _apply.call(this, Object.assign({}, props, this[refField]));
                }
            };
        });
    };
};

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function bindEvents$1(map) {
    return withRefs$1(function (component) {
        return Object.keys(map).reduce(function (acc, refName) {
            var eventMap = map[refName];
            acc[refName] = function (el) {
                var unsubscribers = Object.keys(eventMap).map(function (eventName) {
                    var _handler = eventMap[eventName];
                    var handler = function handler(event) {
                        return _handler(event, component);
                    };
                    el.addEventListener(eventName, handler, false);
                    return function () {
                        return el.removeEventListener(eventName, handler, false);
                    };
                });
                return {
                    unsubscribe: function unsubscribe() {
                        unsubscribers.forEach(function (f) {
                            return f();
                        });
                        unsubscribers.length = 0;
                    }
                };
            };
            return acc;
        }, {});
    });
}

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
  * Accepts a function that maps owner props to a new collection of props that are passed to the base component.
  */
var mapProps$1 = function mapProps(mapper) {
    return function (Component) {
        return Component(function (_ref) {
            var _apply = _ref.apply;
            return {
                apply: function apply(props) {
                    if (props !== this.props) {
                        _apply.call(this, mapper(props));
                    }
                }
            };
        });
    };
};

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Specifies props to be passed by default to the base component.
 * Similar to withProps(), except the props from the owner take
 * precedence over props provided to the Hoc.
 */
function defaultProps$1(defaultProps) {
  return mapProps$1(function (props) {
    return _defaults({}, props, defaultProps);
  });
}

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Like mapProps(), except the newly created props are merged with the owner props.
 */
function withProps$1(additionalProps) {
  return mapProps$1(function (props) {
    return Object.assign({}, props, additionalProps);
  });
}

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Copyright (c) 2015-2016 Andrew Clark
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var mapValues = function mapValues(obj, func) {
    var result = {};
    for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
            result[key] = func(obj[key], key);
        }
    }
    return result;
};

var CACHED_HANDLERS = 'MELODY/WITH_HANDLERS/CACHED_HANDLERS';
var HANDLERS = 'MELODY/WITH_HANDLERS/HANDLERS';

var withHandlers$1 = function withHandlers(handlers) {
    return function (Component) {
        return function (_Component) {
            _inherits(WithHandlersComponent, _Component);

            function WithHandlersComponent() {
                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                _classCallCheck(this, WithHandlersComponent);

                var _this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args)));

                _this[CACHED_HANDLERS] = {};
                _this[HANDLERS] = mapValues(handlers, function (createHandler, handlerName) {
                    return function () {
                        var cachedHandler = _this[CACHED_HANDLERS][handlerName];
                        if (cachedHandler) {
                            return cachedHandler.apply(undefined, arguments);
                        }

                        var handler = createHandler(_this.props);
                        _this[CACHED_HANDLERS][handlerName] = handler;

                        if (process.env.NODE_ENV !== 'production' && typeof handler !== 'function') {
                            // eslint-disable-next-line no-console
                            console.error('withHandlers(): Expected a map of higher-order functions. ' + 'Refer to the docs for more info.');
                        }

                        return handler.apply(undefined, arguments);
                    };
                });
                return _this;
            }

            WithHandlersComponent.prototype.apply = function apply(props) {
                if (props === this.props) {
                    return;
                }

                this[CACHED_HANDLERS] = {};

                _Component.prototype.apply.call(this, _extends({}, props, this[HANDLERS]));
            };

            return WithHandlersComponent;
        }(Component);
    };
};

var _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn$1(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits$1(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var UNSUB = 'MELODY/WITH_STORE/UNSUB';
var IS_FIRST_APPLY = 'MELODY/WITH_STORE/FIRST_APPLY';
var STORE = 'MELODY/WITH_STORE/STORE';

var withStore$1 = function withStore(storeFactory) {
    var stateName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'state';
    var dispatchName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'dispatch';
    return function (Component) {
        return function (_Component) {
            _inherits$1(WithStoreComponent, _Component);

            function WithStoreComponent() {
                _classCallCheck$1(this, WithStoreComponent);

                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                var _this = _possibleConstructorReturn$1(this, _Component.call.apply(_Component, [this].concat(args)));

                _this[STORE] = storeFactory();
                _this[IS_FIRST_APPLY] = true;
                return _this;
            }

            WithStoreComponent.prototype.apply = function apply(props) {
                var _this2 = this,
                    _extends3;

                if (props === this.props) {
                    return;
                }

                this[STORE].dispatch({
                    type: melodyComponent.RECEIVE_PROPS,
                    payload: props
                });

                if (this[IS_FIRST_APPLY]) {
                    this[UNSUB] = this[STORE].subscribe(function () {
                        var _extends2;

                        _Component.prototype.apply.call(_this2, _extends$1({}, _this2.props, (_extends2 = {}, _extends2[stateName] = _this2[STORE].getState(), _extends2[dispatchName] = _this2[STORE].dispatch, _extends2)));
                    });
                    this[IS_FIRST_APPLY] = false;
                }

                _Component.prototype.apply.call(this, _extends$1({}, props, (_extends3 = {}, _extends3[stateName] = this[STORE].getState(), _extends3[dispatchName] = this[STORE].dispatch, _extends3)));
            };

            WithStoreComponent.prototype.componentWillUnmount = function componentWillUnmount() {
                this[UNSUB]();
            };

            return WithStoreComponent;
        }(Component);
    };
};

/**
 * Copyright 2017 trivago N.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Utility
var compose = _flowRight;

var lifecycle = lifecycle$1;
var bindEvents = bindEvents$1;
var mapProps = mapProps$1;
var defaultProps = defaultProps$1;
var withProps = withProps$1;
var withHandlers = withHandlers$1;
var withStore = withStore$1;
var withRefs = withRefs$1;

exports.compose = compose;
exports.lifecycle = lifecycle;
exports.bindEvents = bindEvents;
exports.mapProps = mapProps;
exports.defaultProps = defaultProps;
exports.withProps = withProps;
exports.withHandlers = withHandlers;
exports.withStore = withStore;
exports.withRefs = withRefs;
